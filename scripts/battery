#!/usr/bin/env python3

# todo: refresh when sc.maxyx changed
# dependencies: acpi, figlet (not pyfiglet)

from re import findall as fa, search as se
from os import popen as popen
from curses import initscr as it, endwin as ew, curs_set as cs, start_color as scl, use_default_colors as udc, init_pair as ip, color_pair as cp, COLOR_GREEN as GREEN, COLOR_RED as RED, COLOR_BLACK as BLACK, COLOR_WHITE as WHITE, A_BOLD as BOLD
from random import randint as ri
from time import sleep as sl


DRAW_ONCE = 1
CLEAR_ONCE = 2
po = lambda s: popen(s).read()

includePercSymbol = True
frameDuration = 1
#fonts = "alligator alphabet avatar banner3-D basic bell big bulbhead colossal contrast cosmic doom fuzzy graceful graffiti morse poison rectangles relief2 rev sblood tanja ticks".split(" ")
fonts = ["basic"]

def getPerc():
    s = po('acpi')
    r = fa('1?[0-9]?[0-9]%', s)
    charging = True if se(' [Cc]harging', s) else False
    if len(r) == 1:
        return int(r[0][:-1]), charging
    else:
        return max([int(p[:-1]) for p in r]), charging

def figlet(perc):
    return po(f"figlet -f {fonts[ri(0, len(fonts)-1)]} {perc}").split('\n')

def clean(para):
    mlw = 100; mrw = 100
    for ln in para:
        if len(ln.strip()) != 0:
            lw = len(ln) - len(ln.lstrip())
            mlw = min(lw, mlw)
            rw = len(ln) - len(ln.rstrip())
            mrw = min(rw, mrw)
    newPara = []
    for ln in para:
        if len(ln.strip()) != 0:
            newPara.append(ln[mlw:((-1)*mrw if mrw != 0 else None)])
    #raise Exception([para, newPara])
    return newPara

def draw(sc, para, col, mode):
    i = 0
    h, w = sc.getmaxyx()
    lnn = 0
    for ln in para:
        y = (h - len(para))//2 + lnn
        chn = 0
        for ch in ln:
            x = (w - len(para[0]))//2 + chn
            if y >= 0 and y < h and x >= 0 and x < w:
                try:
                    sc.addch(y, x, ch if mode == DRAW_ONCE else ' ', cp(col) | BOLD)
                except:
                    pass
            chn += 1
        lnn += 1

def main():
    try:
        sc = it()
        cs(0)
        scl()
        udc()
        ip(1, GREEN, -1)
        ip(2, RED, -1)
        ip(3, WHITE, -1)
        sc.clear()
        perc, charging, h, w = -1, -1, -1, -1
        while True:
            prevPerc, prevCharging = perc, charging
            perc, charging = getPerc()
            prevH, prevW = h, w
            h, w = sc.getmaxyx()
            #raise Exception(perc)
            if (prevPerc != perc or prevCharging != charging) or (prevH != h or prevW != w):
                #draw(sc, ds, charging, CLEAR_ONCE)
                sc.clear()
                ds = clean(figlet(f"{perc}%"))
                color = 1 if charging else (2 if perc <= 30 else 3)
                draw(sc, ds, color, DRAW_ONCE)
                sc.refresh()
            #prevH = sc.getmaxyx()[0]; prevW = sc.getmaxyx()[1]
            sl(frameDuration)
            sc.refresh()
    except KeyboardInterrupt:
        pass
    finally:
        ew()

if __name__ == '__main__':
    main()
