#!/usr/bin/env python

# dependencies: acpi, figlet (not pyfiglet)

from re import search as se
from os import popen as popen
from curses import initscr as it, endwin as ew, curs_set as cs, start_color as scl, use_default_colors as udc, init_pair as ip, color_pair as cp, COLOR_GREEN as GREEN, COLOR_RED as RED, COLOR_BLACK as BLACK, A_BOLD as BOLD
from random import randint as ri
from time import sleep as sl


CLEAR_SCREEN = 1
DRAW_ONCE = 2
CLEAR_ONCE = 3
po = lambda s: popen(s).read()

includePercSymbol = True
frameDuration = 1
fonts = "alligator alphabet avatar banner3-D basic bell big bulbhead colossal contrast cosmic doom fuzzy graceful graffiti morse poison rectangles relief2 rev sblood tanja ticks".split(" ")

def getPerc():
    s = po('acpi')
    r = se('1?[0-9]?[0-9]%', s)
    charging = True if se(' [Cc]harging', s) else False
    return s[r.regs[0][0]:(r.regs[0][1]-(1 if not includePercSymbol else 0))], charging

def figlet(perc):
    return po(f"figlet -f {fonts[ri(0, len(fonts)-1)]} {perc}").split('\n')

def clean(para):
    mlw = 100; mrw = 100
    for ln in para:
        if len(ln.strip()) != 0:
            lw = len(ln) - len(ln.lstrip())
            mlw = min(lw, mlw)
            rw = len(ln) - len(ln.rstrip())
            mrw = min(rw, mrw)
    newPara = []
    for ln in para:
        if len(ln.strip()) != 0:
            newPara.append(ln[mlw:((-1)*mrw if mrw != 0 else None)])
    #raise Exception([para, newPara])
    return newPara

lasth = 0; lastw = 0
def draw(sc, para, charging, mode):
    global lasth, lastw
    i = 0
    h, w = sc.getmaxyx()
    lnn = 0
    if mode == CLEAR_SCREEN or lasth != h or lastw != w:
        for y in range(h):
            try:
                sc.addstr(y, 0, ' '*w, cp(1))
            except:
                pass
        lasth = h; lastw = w
        return
    lasth = h; lastw = w
    for ln in para:
        y = (h - len(para))//2 + lnn
        chn = 0
        for ch in ln:
            x = (w - len(para[0]))//2 + chn
            if y >= 0 and y < h and x >= 0 and x < w:
                try:
                    sc.addch(y, x, ch if mode == DRAW_ONCE else ' ', cp(1 if charging else 2) | BOLD)
                except:
                    pass
            chn += 1
        lnn += 1

def main():
    try:
        sc = it()
        cs(0)
        scl()
        udc()
        ip(1, GREEN, BLACK)
        ip(2, RED, BLACK)
        draw(sc, None, None, CLEAR_SCREEN)
        while True:
            perc,charging = getPerc()
            ds = clean(figlet(perc))
            draw(sc, ds, charging, DRAW_ONCE)
            sc.refresh()
            sl(frameDuration)
            draw(sc, ds, charging, CLEAR_ONCE)
            sc.refresh()
    except KeyboardInterrupt:
        pass
    finally:
        ew()

if __name__ == '__main__':
    main()
