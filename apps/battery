#!/usr/bin/env python3

import curses
import os
from sys import argv
import time
from random import random as r
from functools import reduce

# todo: adhd2 mode where curses doesnt clear screen before new font in adhd mode but every updated output is in new color

fonts = "alligator alphabet avatar banner3-D basic bell big bulbhead colossal contrast cosmic doom fuzzy graceful graffiti morse poison rectangles relief2 rev sblood tanja ticks".split(" ")
delay = 0.2 
adhd = False

width = len(reduce(
    lambda x,y: x if len(x.rstrip()) > len(y.rstrip()) else y,
    map(
        lambda fname: reduce(
            lambda x,y: x if len(x.rstrip()) > len(y.rstrip()) else y,
            os.popen(f'figlet -f {fname} 100%').read().split('\n')
        ),
        fonts
    )
))
height = reduce(
    lambda x,y: x if x > y else y,
    map(
        lambda fname: len(list(filter(
            lambda line: len(line.rstrip()) > 0,
            os.popen(f'figlet -f {fname} 100%').read().split('\n')
        ))),
        fonts
    )
)

# todo
# if len(argv) == 2 and (argv[1] == '-a' || argv[1] == '--adhd'):

def fairDim(s):
    if s.getmaxyx()[0] < height + 6 or s.getmaxyx()[1] < width + 12:
        raise Exception(f'Minimum Size {width+12}x{height+6} not satisfied')

try:
    s = curses.initscr()
    size = s.getmaxyx()
    fairDim(s)

    curses.curs_set(0)
    curses.start_color()
    curses.use_default_colors()
    curses.init_pair(1, curses.COLOR_GREEN, curses.COLOR_BLACK)
    curses.init_pair(2, curses.COLOR_RED, curses.COLOR_BLACK)
    curses.init_pair(3, curses.COLOR_BLUE, curses.COLOR_BLACK)
    curses.init_pair(4, curses.COLOR_BLACK, curses.COLOR_BLACK)

    for i in range(width + 8):
        for j in range(height + 4):
            if i == 0 or i == 1 or i == width + 6 or i == width + 7 or j == 0 or j == height + 3:
                s.addstr(1 + j, 2 + i, 'â–ˆ', curses.A_DIM)
            else:
                s.addch(1 + j, 2 + i, ' ', curses.color_pair(4))
    s.refresh()
    out = os.popen('acpi').read().split(' ')
    #raise Exception(out)
    while True:
        fairDim(s)
        outprev = out
        out = os.popen('acpi').read().split(' ')
        bat = out[3][:-1] if out[2] != "Not" else out[4][:-8]
        #num = os.popen(f"figlet -f /usr/share/figlet/fonts/Big\ Money-nw.flf {out[3][:-1]}").read().rstrip().split('\n')
        num = list(filter(lambda line: len(line.rstrip()) > 0, os.popen(f"figlet -f {fonts[int(r()*len(fonts))]} {bat}").read().rstrip().split('\n')))
        nwidth = len(reduce(lambda x,y: x if len(x) > len(y) else y, num))
        nheight = len(num)
        for j in range(height):
            #clear line
            if not adhd or outprev[3][:-1] != out[3][:-1]:
                s.addstr(3 + j, 5, ' '*width, curses.color_pair(4))

            #repopulate line
            if j >= (height - nheight)//2 and j < (height - nheight)//2 + nheight:
                line = num[j - (height - nheight)//2]
                s.addstr(3 + j, 6 + (width - nwidth)//2, line, curses.color_pair(1 if out[2].lower() == 'charging,' else 2) | curses.A_BOLD)
        s.refresh()
        time.sleep(delay)
except KeyboardInterrupt:
    pass
finally:
    curses.endwin()

